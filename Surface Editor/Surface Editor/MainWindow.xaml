<Window x:Class="Surface_Editor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Surface_Editor"
        xmlns:convert="clr-namespace:Surface_Editor.Converters"
        xmlns:models="clr-namespace:Engine.Models;assembly=Engine"
        xmlns:predefinedModels="clr-namespace:Engine.Models.PredefinedModels;assembly=Engine"
        mc:Ignorable="d"
        Title="Surface Editor" Name="Window" Height="1080" Width="1920" WindowState="Maximized" Background="Gray" WindowStyle="SingleBorderWindow" KeyboardNavigation.DirectionalNavigation="Once" SizeChanged="Window_SizeChanged" Loaded="Window_Loaded" Closing="Window_Closing">
    <Window.Resources>
        <convert:VisibilityToColorConverter x:Key="VisibilityToColorConverter" />
        <convert:BoolToStringConverter x:Key="BoolToStringConverter" />
        <convert:BoolToColorConverter x:Key="BoolToColorConverter" />
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground"
                Value="White" />
        </Style>
        <Style x:Key="Template" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground"
                Value="White" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background"
                Value="Black" />
        </Style>
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type StackPanel}">
            <Setter Property="Background"
                Value="Black" />
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border 
                                Name="Border"
                                Margin="0,0,-2,0" 
                                Background="Black"
                                BorderBrush="White"
                                BorderThickness="1,1,1,1" 
                                CornerRadius="2,12,0,0" >
                                <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="12,2,12,2"
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="Gray" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Black" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF242424" />
                                <Setter Property="Foreground" Value="#FF242424" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style TargetType="{x:Type DockPanel}">
            <Setter Property="Background"
                Value="Black" />
        </Style>-->
    </Window.Resources>
    <Grid>
        <Canvas Name="MainCanvas" ClipToBounds="True" Background="Black" Grid.Column="1" MouseWheel="MainCanvas_MouseWheel" MouseMove="MainCanvas_MouseMove" MouseLeftButtonDown="MainCanvas_MouseLeftButtonDown" MouseDown="MainCanvas_MouseDown" KeyDown="Window_KeyDown" MouseRightButtonDown="MainCanvas_MouseRightButtonDown" MouseLeftButtonUp="MainCanvas_MouseLeftButtonUp"/>
        <Grid Name="UIGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70" />
                <ColumnDefinition Width="10*" />
                <ColumnDefinition Width="330" />
            </Grid.ColumnDefinitions>
            <StackPanel Name="ButtonPanel" Margin="20,20,0,20" Background="Black" Opacity="0.7">
                <Button Name="CreateButton" Margin="0,0,0,0" Height="50" MouseEnter="CreateButton_MouseEnter" MouseLeave="CreateButton_MouseLeave">
                    <TextBlock TextAlignment="Center">Create</TextBlock>
                </Button>
                <Button Name="DeleteButton" Margin="0,0,0,0" Height="50" Click="DeleteButton_Click">
                    <TextBlock  TextAlignment="Center">Delete</TextBlock>
                </Button>
                <Button Name="StereoscopicButton" Margin="0,0,0,0" Height="50" Click="StereoscopicButton_Click">
                    <TextBlock  TextAlignment="Center"> 3D View</TextBlock>
                </Button>
                <Button Name="LoadObj" Margin="0,0,0,0" Height="50" Click="LoadObj_Click">
                    <TextBlock TextAlignment="Center">Load<LineBreak/>.obj file</TextBlock>
                </Button>
                <Button Name="SaveObj" Margin="0,0,0,0" Height="50" Click="SaveObj_Click">
                    <TextBlock TextAlignment="Center">Save<LineBreak/>.obj file</TextBlock>
                </Button>
                <Button Name="Save" Margin="0,0,0,0" Height="50" Click="Save_Click">
                    <TextBlock TextAlignment="Center" FontSize="11">Save<LineBreak/>scene</TextBlock>
                </Button>
                <Button Name="Load" Margin="0,0,0,0" Height="50" Click="Load_Click">
                    <TextBlock TextAlignment="Center" FontSize="11">Load<LineBreak/>scene</TextBlock>
                </Button>
                <Button Name="StartAnimation" Margin="0,0,0,0" Height="50" Click="StartAnimation_Click">
                    <TextBlock TextAlignment="Center" FontSize="10">Start<LineBreak/>animation</TextBlock>
                </Button>
                <Button Name="StartScaningKinect" Margin="0,0,0,0" Height="50" Click="StartScaning_Click">
                    <TextBlock Name="ScaningButtonText" TextAlignment="Center" FontSize="10">Start<LineBreak/>scaning</TextBlock>
                </Button>
                <Button Name="FusePoints" Margin="0,0,0,0" Height="50" Click="FusePoints_Click">
                    <TextBlock TextAlignment="Center" FontSize="10">Fuse<LineBreak/>points</TextBlock>
                </Button>
                <Button Name="CreateGregoryPatch" Margin="0,0,0,0" Height="50" Click="CreateGregoryPatch_Click">
                    <TextBlock TextAlignment="Center" FontSize="10">Fill in<LineBreak/>surface</TextBlock>
                </Button>
                <Button Name="IntersectSurfaces" Margin="0,0,0,0" Height="50" Click="IntersectSurfaces_Click">
                    <TextBlock TextAlignment="Center" FontSize="10">Intersect<LineBreak/>surfaces</TextBlock>
                </Button>
                <Button Name="TrimSurface" Margin="0,0,0,0" Height="50" Click="TrimSurface_Click">
                    <TextBlock TextAlignment="Center" FontSize="10">Trim<LineBreak/>surface</TextBlock>
                </Button>
                <Button Name="ConvertButton" Margin="0,0,0,0" Width="50" Height="50" MouseEnter="ConvertButton_MouseEnter" MouseLeave="ConvertButton_MouseLeave">
                    <TextBlock TextAlignment="Center" FontSize="10">Convert</TextBlock>
                </Button>
                <Button Name="CreatePathButton" Margin="0,0,0,0" Width="50" Height="50" MouseEnter="CreatePathButton_MouseEnter"  MouseLeave="CreatePathButton_MouseLeave">
                    <TextBlock TextAlignment="Center" FontSize="10">Create<LineBreak/>path</TextBlock>
                </Button>
                <Button Name="HelpButton" Margin="0,0,0,0" Width="50" Height="50" Click="HelpButton_Click">
                    <TextBlock TextAlignment="Center" FontSize="10">Help</TextBlock>
                </Button>
            </StackPanel>
            <!--<Grid Grid.Column="1" Margin="50">
                <Canvas Name="MainCanvas" ClipToBounds="True" Background="Black" Grid.Column="1" MouseWheel="MainCanvas_MouseWheel" MouseMove="MainCanvas_MouseMove" MouseLeftButtonDown="MainCanvas_MouseLeftButtonDown" MouseDown="MainCanvas_MouseDown" KeyDown="Window_KeyDown" MouseRightButtonDown="MainCanvas_MouseRightButtonDown"/>
            </Grid>-->
            <DockPanel Grid.Column="1" LastChildFill="False" Margin="0,20,-20,20" Opacity="0.7">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                        <RowDefinition Height=" 50"/>
                    </Grid.RowDefinitions>
                    <!--Create buttons stack panel-->
                    <StackPanel Grid.Row="0" Name="ExpandableButtonPanel0" Orientation="Horizontal" Visibility="Collapsed"  MouseEnter="CreateButton_MouseEnter" MouseLeave="CreateButton_MouseLeave">
                        <Button Name="CreateGridButton" Margin="0,0,0,0" Height="50" Width="50" Click="CreateGridButton_Click">
                            <TextBlock TextAlignment="Center">Create<LineBreak/>Grid</TextBlock>
                        </Button>
                        <Button Name="CreateModelButton" Margin="0,0,0,0" Height="50" Width="50" Click="CreateModelButton_Click">
                            <TextBlock TextAlignment="Center">Create<LineBreak/>Model</TextBlock>
                        </Button>
                        <Button Name="CreatePointButton" Margin="0,0,0,0" Height="50" Width="50" Click="CreatePointButton_Click">
                            <TextBlock TextAlignment="Center">Create<LineBreak/>Point</TextBlock>
                        </Button>
                        <Button Name="CreateBezier" Margin="0,0,0,0" Height="50" Width="50" Click="CreateBezier_Click">
                            <TextBlock TextAlignment="Center">Create<LineBreak/>Bezier</TextBlock>
                        </Button>
                        <Button Name="CreateBezierC2" Margin="0,0,0,0" Height="50" Width="50" Click="CreateBezierC2_Click">
                            <TextBlock TextAlignment="Center">Create<LineBreak/>B-Spline<LineBreak/>(C2)</TextBlock>
                        </Button>
                        <Button Name="InterpolationCurveC2" Margin="0,0,0,0" Height="50" Width="50" Click="InterpolationCurveC2_Click">
                            <TextBlock TextAlignment="Center" FontSize="8">Create<LineBreak/>Interpolation<LineBreak/>curve</TextBlock>
                        </Button>
                        <Button Name="CreateBezierPatch" Margin="0,0,0,0" Height="50" Width="50" Click="CreateBezierPatch_Click">
                            <TextBlock TextAlignment="Center" FontSize="11">Create<LineBreak/>Bezier<LineBreak/>patch</TextBlock>
                        </Button>
                        <Button Name="CreateBezierPatchC2" Margin="0,0,0,0" Height="50" Width="50" Click="CreateBezierPatchC2_Click">
                            <TextBlock TextAlignment="Center" FontSize="11">Create<LineBreak/>B-Spline<LineBreak/>patch C2</TextBlock>
                        </Button>
                        <Button Name="CreateVoxelGrid" Margin="0,0,0,0" Height="50" Width="50" Click="CreateVoxelGrid_Click">
                            <TextBlock TextAlignment="Center" FontSize="10">Create<LineBreak/>voxel grid</TextBlock>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Row="13" Name="ExpandableButtonPanel13" Orientation="Horizontal" Visibility="Collapsed"  MouseEnter="ConvertButton_MouseEnter" MouseLeave="ConvertButton_MouseLeave">
                        <Button Name="ConvertToInterpolation" Margin="0,0,0,0" Width="50" Height="50" Click="ConvertToInterpolation_Click">
                            <TextBlock TextAlignment="Center" FontSize="8">Intersection<LineBreak/>to<LineBreak/>interpolation</TextBlock>
                        </Button>
                        <Button Name="ConvertToObj" Margin="0,0,0,0" Width="50" Height="50" Click="ConvertToObj_Click">
                            <TextBlock TextAlignment="Center" FontSize="10">Voxel grid<LineBreak/>to obj</TextBlock>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Row="14" Name="ExpandableButtonPanel14" Orientation="Horizontal" Visibility="Collapsed"  MouseEnter="CreatePathButton_MouseEnter" MouseLeave="CreatePathButton_MouseLeave">
                        <Button Name="CreateRoughing" Margin="0,0,0,0" Width="50" Height="50" Click="CreateRoughing_Click">
                            <TextBlock TextAlignment="Center" FontSize="8">Create<LineBreak/>roughing<LineBreak/>path</TextBlock>
                        </Button>
                        <Button Name="CreateBase" Margin="0,0,0,0" Width="50" Height="50" Click="CreateBase_Click">
                            <TextBlock TextAlignment="Center" FontSize="8">Create<LineBreak/>base<LineBreak/>path</TextBlock>
                        </Button>
                        <Button Name="CreateFinish" Margin="0,0,0,0" Width="50" Height="50" Click="CreateFinish_Click">
                            <TextBlock TextAlignment="Center" FontSize="8">Create<LineBreak/>finish<LineBreak/>path</TextBlock>
                        </Button>
                        <Button Name="CalculateHeight" Margin="0,0,0,0" Width="50" Height="50" Click="CalculateHeight_Click">
                            <TextBlock TextAlignment="Center" FontSize="8">Calculate<LineBreak/>height<LineBreak/>map</TextBlock>
                        </Button>
                    </StackPanel>
                </Grid>
            </DockPanel>
            <DockPanel Grid.Column="1" LastChildFill="False" Margin="0,20,-20,20" Opacity="0.7">
                <Image Name="KinektView" DockPanel.Dock="Left" Width="640" Height="480" VerticalAlignment="Top" Margin="20" Visibility="Collapsed" StretchDirection="UpOnly" Stretch="None"></Image>
                <DockPanel DockPanel.Dock="Top">
                    <DockPanel Name="Parametrization1" Visibility="Hidden" LastChildFill="False" IsHitTestVisible="False">
                        <Grid Margin="40,0,20,0" Height="204" DockPanel.Dock="Left">
                            <TextBlock Margin="1" Name="Obj1Name"></TextBlock>
                            <Border  Name="border1" BorderBrush="Gray" BorderThickness="2" DockPanel.Dock="Left" Width="204" Height="204" VerticalAlignment="Top" >
                                <Canvas Name="ParametersIntersection1" DockPanel.Dock="Left" Width="200" Height="200" VerticalAlignment="Top" MouseDown="ParametersIntersection1_MouseDown" Background="Transparent"></Canvas>
                            </Border>
                        </Grid>
                    </DockPanel>
                    <DockPanel Name="Parametrization2" Visibility="Hidden" LastChildFill="False" IsHitTestVisible="False">
                        <Grid Margin="20,0,20,0" Height="204" DockPanel.Dock="Left">
                            <TextBlock Margin="1" Name="Obj2Name"></TextBlock>
                            <Border Name="border2" BorderBrush="Gray" BorderThickness="2" Width="204" Height="204" VerticalAlignment="Top">
                                <Canvas Name="ParametersIntersection2" DockPanel.Dock="Left" Width="200" Height="200" VerticalAlignment="Top" MouseDown="ParametersIntersection2_MouseDown" Background="Transparent"></Canvas>
                            </Border>
                        </Grid>
                    </DockPanel>
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel LastChildFill="False" Grid.Column="1">
                            <Button Name="YButton" Margin="3" Width="3" Height="30" DockPanel.Dock="Top"  Background="Green" BorderThickness="0" Click="YButton_Click" Visibility="Collapsed"></Button>
                            <DockPanel LastChildFill="False" DockPanel.Dock="Top">
                                <Button Name="ZButton" Margin="5" Width="20" Height="3" DockPanel.Dock="Right" Background="Blue" BorderThickness="0" Click="ZButton_Click"></Button>
                                <Button Name="XButton" Margin="5" Width="20" Height="3" DockPanel.Dock="Right" Background="Red" BorderThickness="0" Click="XButton_Click"></Button>
                            </DockPanel>
                        </DockPanel>
                    </Grid>
                </DockPanel>
                <DockPanel Name="BottomPanel"  Background="Black" Height="18" DockPanel.Dock="Bottom"  Opacity="0.7">
                    <TextBlock  Margin="0,0,10,0" Text="{Binding IsSaved, Converter={StaticResource BoolToStringConverter}}" Foreground="{Binding IsSaved, Converter={StaticResource BoolToColorConverter}}" DockPanel.Dock="Right"></TextBlock>
                    <StackPanel Orientation="Horizontal" Width="550">
                        <TextBlock Margin="0,0,0,0">Cursor position:</TextBlock>
                        <TextBlock Margin="20,0,0,0">x=</TextBlock>
                        <TextBlock Text="{Binding Cursor3D.Position.X, StringFormat=N2}"></TextBlock>
                        <TextBlock Margin="20,0,0,0">y=</TextBlock>
                        <TextBlock Text="{Binding Cursor3D.Position.Y, StringFormat=N2}"></TextBlock>
                        <TextBlock Margin="20,0,0,0">z=</TextBlock>
                        <TextBlock Text="{Binding Cursor3D.Position.Z, StringFormat=N2}"></TextBlock>
                        <TextBlock Margin="20,0,0,0">Cursor screen position</TextBlock>
                        <TextBlock Margin="20,0,0,0">X=</TextBlock>
                        <TextBlock Text="{Binding Cursor3D.ScreenPosition.X, StringFormat=N2}"></TextBlock>
                        <TextBlock Margin="20,0,0,0">Y=</TextBlock>
                        <TextBlock Text="{Binding Cursor3D.ScreenPosition.Y, StringFormat=N2}"></TextBlock>
                    </StackPanel>
                    <Button Style="{StaticResource TransparentStyle}" Name="LogButton" HorizontalAlignment="Stretch" Click="LogButton_Click" BorderThickness="0">
                        <TextBlock Name="MessageLog" Text="" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    </Button>
                </DockPanel>
            </DockPanel>
            <DockPanel Name="RightPanel" Margin="20" Background="Black" Grid.Column="2" Opacity="0.7">
                <Grid VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*"/>
                        <RowDefinition Height="6.5*"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="TextBox">
                            <Setter Property="Width" Value="40" />
                            <Setter Property="Margin" Value="0,0,10,0" />
                        </Style>
                    </Grid.Resources>
                    <ListView Name="ObjectsList" Grid.Row="0" ItemsSource="{Binding Models}" SelectionChanged="ObjectsList_SelectionChanged" MouseUp="ObjectsList_MouseUp" MouseDown="ObjectsList_MouseDown">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <CheckBox DockPanel.Dock="Left"  Margin="0,0,10,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                    <TextBox Text="{Binding Name, Mode=TwoWay}" FontWeight="Bold" Width="100" Foreground="{Binding IsVisible, Mode=OneWay, Converter={StaticResource VisibilityToColorConverter}}"/>
                                </WrapPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Grid Grid.Row="1" Margin="20,20,20,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5.8*"/>
                            <RowDefinition Height="4*"/>
                            <RowDefinition Height="0*"/>
                        </Grid.RowDefinitions>
                        <ContentControl Name="DescriptionControl"  DockPanel.Dock="Top" Grid.Row="0" Content="{Binding DisplayModel, TargetNullValue={}}">
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type models:StaticObjModel}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                            <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Rotation</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Scale</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type models:MeshObjModel}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                            <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Rotation</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Scale</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type predefinedModels:Torus}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                            <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Rotation</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Scale</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Quality</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">U=</TextBlock>
                                                <TextBox Name="UValue" DockPanel.Dock="Left" Text="{Binding UComplexity, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">V=</TextBlock>
                                                <TextBox Name="VValue" DockPanel.Dock="Left" Text="{Binding VComplexity, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Radius</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">R=</TextBlock>
                                                <TextBox Name="OutsideRadiusValue" DockPanel.Dock="Left" Text="{Binding OutsideRadius, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">r=</TextBlock>
                                                <TextBox Name="InsideRadiusValue" DockPanel.Dock="Left" Text="{Binding InsideRadius, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type predefinedModels:AstroidalEllipsoid}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                            <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Rotation</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Scale</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Quality</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">U=</TextBlock>
                                                <TextBox Name="UValue" DockPanel.Dock="Left" Text="{Binding UComplexity, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">V=</TextBlock>
                                                <TextBox Name="VValue" DockPanel.Dock="Left" Text="{Binding VComplexity, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Parameters</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">a=</TextBlock>
                                                <TextBox Name="AValue" DockPanel.Dock="Left" Text="{Binding A, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type predefinedModels:BohemianDome}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                            <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Rotation</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Scale</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Quality</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">U=</TextBlock>
                                                <TextBox Name="UValue" DockPanel.Dock="Left" Text="{Binding UComplexity, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">V=</TextBlock>
                                                <TextBox Name="VValue" DockPanel.Dock="Left" Text="{Binding VComplexity, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Parameters</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">a=</TextBlock>
                                                <TextBox Name="AValue" DockPanel.Dock="Left" Text="{Binding A, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">b=</TextBlock>
                                                <TextBox Name="BValue" DockPanel.Dock="Left" Text="{Binding B, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type predefinedModels:Coil}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                            <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Rotation</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Scale</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Quality</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">U=</TextBlock>
                                                <TextBox Name="UValue" DockPanel.Dock="Left" Text="{Binding UComplexity, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">V=</TextBlock>
                                                <TextBox Name="VValue" DockPanel.Dock="Left" Text="{Binding VComplexity, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Parameters</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">a=</TextBlock>
                                                <TextBox Name="AValue" DockPanel.Dock="Left" Text="{Binding A, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">b=</TextBlock>
                                                <TextBox Name="BValue" DockPanel.Dock="Left" Text="{Binding B, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">h=</TextBlock>
                                                <TextBox Name="HValue" DockPanel.Dock="Left" Text="{Binding H, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type models:Point3D}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                            <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type predefinedModels:Grid}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                            <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Rotation</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Scale</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                <TextBox Name="XScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.X, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                <TextBox Name="YScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Y, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                <TextBox Name="ZScaleText" DockPanel.Dock="Left" Text="{Binding ModelScale.Z, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Quality</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >U=</TextBlock>
                                                <TextBox Name="UValue" DockPanel.Dock="Left" Text="{Binding UComplexity, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">V=</TextBlock>
                                                <TextBox Name="VValue" DockPanel.Dock="Left" Text="{Binding VComplexity, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                            <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Size</TextBlock>
                                            <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                <TextBlock DockPanel.Dock="Left" >x=</TextBlock>
                                                <TextBox Name="OutsideRadiusValue" DockPanel.Dock="Left" Text="{Binding SizeX, Mode=TwoWay}"></TextBox>
                                                <TextBlock DockPanel.Dock="Left">y=</TextBlock>
                                                <TextBox Name="InsideRadiusValue" DockPanel.Dock="Left" Text="{Binding SizeY, Mode=TwoWay}"></TextBox>
                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate x:Name="BezierTemplate" DataType="{x:Type models:BezierCurve}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="4*"/>
                                            </Grid.RowDefinitions>
                                            <DockPanel Grid.Row="0" LastChildFill="False">
                                                <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                                    <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox Margin="0,5,0,0" IsChecked="{Binding DrawPoly, Mode=TwoWay}" DockPanel.Dock="Left"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="5,5,0,0">Draw bezier polygon</TextBlock>
                                                </DockPanel>
                                            </DockPanel>
                                            <DockPanel Grid.Row="1" LastChildFill="False" Margin="20,0,20,0">
                                                <TextBlock DockPanel.Dock="Top">Points:</TextBlock>
                                                <ListView DockPanel.Dock="Top" Height="130" Name="PointsList" ItemsSource="{Binding ControlPoints}" SelectionChanged="PointsList_SelectionChanged">
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <WrapPanel>
                                                                <TextBox Text="{Binding Name, Mode=TwoWay}" FontWeight="Bold" Width="100"/>
                                                            </WrapPanel>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                        <TextBox Name="XPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.X, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                        <TextBox Name="YPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Y, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                        <TextBox Name="PointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Z, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                            </DockPanel>
                                        </Grid>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate x:Name="BezierC2Template" DataType="{x:Type models:BezierCurveC2}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="4*"/>
                                            </Grid.RowDefinitions>
                                            <DockPanel Grid.Row="0" LastChildFill="False">
                                                <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                                    <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox Margin="0,5,0,0" IsChecked="{Binding DrawPoly, Mode=TwoWay}" DockPanel.Dock="Left"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="5,5,0,0">Draw bezier polygon</TextBlock>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,20,0,0">
                                                    <RadioButton DockPanel.Dock="Top" GroupName="BezierC2Type" IsChecked="True" Checked="RadioButton_Checked">
                                                        <TextBlock>B-Spline</TextBlock>
                                                    </RadioButton>
                                                    <RadioButton DockPanel.Dock="Top" GroupName="BezierC2Type" Checked="RadioButton_Checked_1">
                                                        <TextBlock>Bernstain</TextBlock>
                                                    </RadioButton>
                                                </DockPanel>
                                            </DockPanel>
                                            <DockPanel Grid.Row="1" LastChildFill="False" Margin="20,0,20,0">
                                                <TextBlock DockPanel.Dock="Top">Points:</TextBlock>
                                                <ListView DockPanel.Dock="Top" Height="130" Name="PointsList" ItemsSource="{Binding ControlPoints}" SelectionChanged="PointsList_SelectionChanged">
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <WrapPanel>
                                                                <TextBox Text="{Binding Name, Mode=TwoWay}" FontWeight="Bold" Width="100"/>
                                                            </WrapPanel>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                        <TextBox Name="XPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.X, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                        <TextBox Name="YPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Y, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                        <TextBox Name="PointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Z, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                            </DockPanel>
                                        </Grid>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate x:Name="InterpolationTemplate" DataType="{x:Type models:InterpolationCurve}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="4*"/>
                                            </Grid.RowDefinitions>
                                            <DockPanel Grid.Row="0" LastChildFill="False">
                                                <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                                    <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox Margin="0,5,0,0" IsChecked="{Binding DrawPoly, Mode=TwoWay}" DockPanel.Dock="Left"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="5,5,0,0">Draw bezier polygon</TextBlock>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,20,0,0">
                                                    <TextBlock DockPanel.Dock="Top">Knots placement:</TextBlock>
                                                    <RadioButton Name="EquidistantKnots" DockPanel.Dock="Top" GroupName="BezierC2Type" Checked="EquidistantKnots_Checked">
                                                        <TextBlock>Equidistant</TextBlock>
                                                    </RadioButton>
                                                    <RadioButton Name="ChordKnots" DockPanel.Dock="Top" GroupName="BezierC2Type" IsChecked="True" Checked="ChordKnots_Checked">
                                                        <TextBlock>Chord length</TextBlock>
                                                    </RadioButton>
                                                </DockPanel>
                                            </DockPanel>
                                            <DockPanel Grid.Row="1" LastChildFill="False" Margin="20,0,20,0">
                                                <TextBlock DockPanel.Dock="Top">Points:</TextBlock>
                                                <ListView DockPanel.Dock="Top" Height="130" Name="PointsList" ItemsSource="{Binding ControlPoints}" SelectionChanged="PointsList_SelectionChanged">
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <WrapPanel>
                                                                <TextBox Text="{Binding Name, Mode=TwoWay}" FontWeight="Bold" Width="100"/>
                                                            </WrapPanel>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                        <TextBox Name="XPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.X, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                        <TextBox Name="YPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Y, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                        <TextBox Name="PointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Z, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                            </DockPanel>
                                        </Grid>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate x:Name="BezierPatchTemplate" DataType="{x:Type models:SurfacePatch}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="4*"/>
                                            </Grid.RowDefinitions>
                                            <DockPanel Grid.Row="0" LastChildFill="False">
                                                <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                                    <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                        <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Position.X, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                        <TextBox Name="YPositionText" DockPanel.Dock="Left" Text="{Binding Position.Y, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                        <TextBox Name="ZPositionText" DockPanel.Dock="Left" Text="{Binding Position.Z, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Rotation</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left">X=</TextBlock>
                                                        <TextBox Name="XRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.X, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                        <TextBox Name="YRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Y, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                        <TextBox Name="ZRotationText" DockPanel.Dock="Left" Text="{Binding Rotation.Z, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Drawing precision</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left" >U=</TextBlock>
                                                        <TextBox Name="UValue" DockPanel.Dock="Left" Text="{Binding VerticalPrecision, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left">V=</TextBlock>
                                                        <TextBox Name="VValue" DockPanel.Dock="Left" Text="{Binding HorizontalPrecision, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox Margin="0,0,0,0" IsChecked="{Binding DrawPoly, Mode=TwoWay}" DockPanel.Dock="Left"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="5,0,0,0">Draw polygon</TextBlock>
                                                </DockPanel>
                                            </DockPanel>
                                            <DockPanel Grid.Row="1" LastChildFill="False" Margin="20,0,20,0">
                                                <TextBlock DockPanel.Dock="Top">Points:</TextBlock>
                                                <ListView DockPanel.Dock="Top" Height="130" Name="PointsList" ItemsSource="{Binding ScreenPoints}" SelectionChanged="PointsList_SelectionChanged">
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <WrapPanel>
                                                                <TextBox Text="{Binding Name, Mode=TwoWay}" FontWeight="Bold" Width="100"/>
                                                            </WrapPanel>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                        <TextBox Name="XPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.X, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                        <TextBox Name="YPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Y, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                        <TextBox Name="PointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Z, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                            </DockPanel>
                                        </Grid>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate x:Name="GregoryPatchTemplate" DataType="{x:Type models:GregoryPatch}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="6*"/>
                                            </Grid.RowDefinitions>
                                            <DockPanel Grid.Row="0" LastChildFill="False">
                                                <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                                    <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Drawing precision</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left" >U=</TextBlock>
                                                        <TextBox Name="UValue" DockPanel.Dock="Left" Text="{Binding VerticalPrecision, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left">V=</TextBlock>
                                                        <TextBox Name="VValue" DockPanel.Dock="Left" Text="{Binding HorizontalPrecision, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox Margin="0,0,0,0" IsChecked="{Binding DrawPoly, Mode=TwoWay}" DockPanel.Dock="Left"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="5,0,0,0">Draw vectors</TextBlock>
                                                </DockPanel>
                                            </DockPanel>
                                            <DockPanel Grid.Row="1" LastChildFill="False" Margin="20,0,20,0">
                                                <TextBlock DockPanel.Dock="Top">Points:</TextBlock>
                                                <ListView DockPanel.Dock="Top" Height="130" Name="PointsList" ItemsSource="{Binding SurfacePatches}" SelectionChanged="PointsList_SelectionChanged">
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <WrapPanel>
                                                                <TextBox Text="{Binding Name, Mode=TwoWay}" FontWeight="Bold" Width="100"/>
                                                            </WrapPanel>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Position</TextBlock>
                                                    <DockPanel LastChildFill="False" DockPanel.Dock="Right">
                                                        <TextBlock DockPanel.Dock="Left" >X=</TextBlock>
                                                        <TextBox Name="XPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.X, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Y=</TextBlock>
                                                        <TextBox Name="YPointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Y, Mode=TwoWay}"></TextBox>
                                                        <TextBlock DockPanel.Dock="Left" >Z=</TextBlock>
                                                        <TextBox Name="PointText" DockPanel.Dock="Left" Width="30" Text="{Binding ElementName=PointsList, Path=SelectedItem.Position.Z, Mode=TwoWay}"></TextBox>
                                                    </DockPanel>
                                                </DockPanel>
                                            </DockPanel>
                                        </Grid>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate x:Name="IntersectionCurveTemplate" DataType="{x:Type models:IntersectionCurve}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="6*"/>
                                            </Grid.RowDefinitions>
                                            <DockPanel Grid.Row="0" LastChildFill="False">
                                                <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                                    <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                                </DockPanel>
                                            </DockPanel>
                                            <DockPanel Grid.Row="1" LastChildFill="False" Margin="20,0,20,0">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                                    </Grid.ColumnDefinitions>
                                                    <DockPanel Grid.Column="0" LastChildFill="False" HorizontalAlignment="Center">
                                                        <TextBlock Text="{Binding S1.Name}" DockPanel.Dock="Top"></TextBlock>
                                                        <TextBlock Margin="0,10,0,0" Text="Trimming:" DockPanel.Dock="Top"></TextBlock>
                                                        <Button DockPanel.Dock="Top" Name="DoTrimming1" Margin="0,10,0,0" Width="80" Click="DoTrimming1_Click">
                                                            <TextBlock>Trim</TextBlock>
                                                        </Button>
                                                        <Button DockPanel.Dock="Top" Name="CancelTrimming1" Margin="0,10,0,0" Width="80" Click="CancelTrimming1_Click">
                                                            <TextBlock>Cancel</TextBlock>
                                                        </Button>
                                                        <Button DockPanel.Dock="Top" Name="ReverseTrimming1" Margin="0,10,0,0" Width="80" Click="ReverseTrimming1_Click">
                                                            <TextBlock>Reverse</TextBlock>
                                                        </Button>
                                                    </DockPanel>
                                                    <DockPanel Grid.Column="1" LastChildFill="False" HorizontalAlignment="Center">
                                                        <TextBlock Text="{Binding S2.Name}" DockPanel.Dock="Top"></TextBlock>
                                                        <TextBlock Margin="0,10,0,0" Text="Trimming:" DockPanel.Dock="Top"></TextBlock>
                                                        <Button DockPanel.Dock="Top" Name="DoTrimming2" Margin="0,10,0,0" Width="80" Click="DoTrimming2_Click">
                                                            <TextBlock>Trim</TextBlock>
                                                        </Button>
                                                        <Button DockPanel.Dock="Top" Name="CancelTrimming2" Margin="0,10,0,0" Width="80" Click="CancelTrimming2_Click">
                                                            <TextBlock>Cancel</TextBlock>
                                                        </Button>
                                                        <Button DockPanel.Dock="Top" Name="ReverseTrimming2" Margin="0,10,0,0" Width="80" Click="ReverseTrimming2_Click">
                                                            <TextBlock>Reverse</TextBlock>
                                                        </Button>
                                                    </DockPanel>
                                                </Grid>
                                            </DockPanel>
                                        </Grid>
                                    </DockPanel>
                                </DataTemplate>
                                <DataTemplate x:Name="VoxelGridTemplate" DataType="{x:Type models:VoxelGrid}">
                                    <DataTemplate.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Template}" />
                                    </DataTemplate.Resources>
                                    <DockPanel LastChildFill="False">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="3*"/>
                                                <RowDefinition Height="6*"/>
                                            </Grid.RowDefinitions>
                                            <DockPanel Grid.Row="0" LastChildFill="False">
                                                <DockPanel LastChildFill="True" DockPanel.Dock="Top" Margin="0,10,0,0">
                                                    <CheckBox DockPanel.Dock="Left"  Margin="0,0,5,0" IsChecked="{Binding IsVisible, Mode=TwoWay}"></CheckBox>
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Name</TextBlock>
                                                    <TextBlock Name="NameText" DockPanel.Dock="Left" Text="{Binding Name, Mode=TwoWay}"></TextBlock>
                                                </DockPanel>
                                                <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="0,20,0,0">
                                                    <TextBlock DockPanel.Dock="Left" Margin="0,0,10,0">Size =</TextBlock>
                                                    <TextBox Name="XPositionText" DockPanel.Dock="Left" Text="{Binding Precision, Mode=TwoWay}"></TextBox>
                                                </DockPanel>
                                            </DockPanel>
                                            <DockPanel Grid.Row="1" LastChildFill="False" Margin="20,0,20,0">
                                                <TextBlock DockPanel.Dock="Top" >Edit voxels visibility:</TextBlock>
                                                <Grid DockPanel.Dock="Top">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                                    </Grid.ColumnDefinitions>
                                                    <DockPanel Grid.Column="0" LastChildFill="False" HorizontalAlignment="Center">
                                                        <Button DockPanel.Dock="Top" Name="ShowVoxels" Margin="0,10,0,0" Width="80" Click="ShowVoxels_Click">
                                                            <TextBlock>Add</TextBlock>
                                                        </Button>
                                                    </DockPanel>
                                                    <DockPanel Grid.Column="1" LastChildFill="False" HorizontalAlignment="Center">
                                                        <Button DockPanel.Dock="Top" Name="RemoveVoxels" Margin="0,10,0,0" Width="80" Click="RemoveVoxels_Click">
                                                            <TextBlock>Remove</TextBlock>
                                                        </Button>
                                                    </DockPanel>
                                                </Grid>
                                                <TextBlock DockPanel.Dock="Top" Margin="0,20,0,0">Mode:</TextBlock>
                                                <RadioButton Name="DrawWithSquares" GroupName="Mode" DockPanel.Dock="Top" IsChecked="True" Checked="DrawWithSquares_Checked">
                                                    <TextBlock> Squares</TextBlock>
                                                </RadioButton>
                                                <RadioButton Name="DrawWithQubes" GroupName="Mode" DockPanel.Dock="Top" Checked="DrawWithQubes_Checked">
                                                    <TextBlock> Qubes</TextBlock>
                                                </RadioButton>
                                            </DockPanel>
                                        </Grid>
                                    </DockPanel>
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                        <DockPanel LastChildFill="True" Grid.Row="1">
                            <TabControl TabStripPlacement="Bottom"  Background="Black" Opacity="1" BorderThickness="0" DockPanel.Dock="Bottom">
                                <TabItem Header="Actions" Foreground="White" Width="80">
                                    <Grid Grid.Row="1" Margin="0,30,0,30">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <DockPanel Grid.Column="0" LastChildFill="False">
                                            <Button Grid.Row="1" Name="LookAtButton" DockPanel.Dock="Top" Margin="0,10,0,0" Width="80" Height="20" Click="LookAtButton_Click">
                                                <TextBlock>Look at</TextBlock>
                                            </Button>
                                            <Button Grid.Row="1" Name="LookAtCursorButton" DockPanel.Dock="Top" Margin="0,10,0,0" Width="80" Height="20" Click="LookAtCursorButton_Click">
                                                <TextBlock>Look at cursor</TextBlock>
                                            </Button>
                                            <Button Grid.Row="1" Name="MoveCursorButton" DockPanel.Dock="Top" Margin="0,10,0,0" Width="80" Height="20" Click="MoveCursorButton_Click">
                                                <TextBlock>Move cursor</TextBlock>
                                            </Button>
                                            <Button Grid.Row="1" Name="SetPointsPosition" DockPanel.Dock="Top" Margin="0,10,0,0" Width="80" Height="20" Click="SetPointsPosition_Click">
                                                <TextBlock>Set position</TextBlock>
                                            </Button>
                                        </DockPanel>
                                        <DockPanel Grid.Column="1" LastChildFill="False">
                                            <Button Grid.Row="1" Name="CreateClonedButton" DockPanel.Dock="Top" Margin="0,10,0,0" Width="80" Height="20" Click="CreateClonedButton_Click">
                                                <TextBlock>Clone object</TextBlock>
                                            </Button>
                                            <Button Grid.Row="1" Name="CreateMirrorButton" DockPanel.Dock="Top" Margin="0,10,0,0" Width="80" Height="20" Click="CreateMirrorButton_Click">
                                                <TextBlock>Mirror object</TextBlock>
                                            </Button>
                                            <Button Grid.Row="1" Name="ChangeCameraButton" DockPanel.Dock="Top" Margin="0,10,0,0" Width="80" Height="20" Click="ChangeCamera_Click">
                                                <TextBlock FontSize="11">Change camera</TextBlock>
                                            </Button>
                                            <Button Grid.Row="1" Name="NextScanButton" DockPanel.Dock="Top" Margin="0,10,0,0" Width="80" Height="20" Click="NextScanButton_Click" Visibility="Collapsed">
                                                <TextBlock>Next scan</TextBlock>
                                            </Button>
                                        </DockPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="Settings" Foreground="White" Width="80">
                                    <DockPanel Margin="0,30,0,30">
                                        <TextBlock DockPanel.Dock="Top">Rendering mode:</TextBlock>
                                        <RadioButton Name="ExactMode" GroupName="RenderingMode" DockPanel.Dock="Top" Checked="ExactMode_Checked">
                                            <TextBlock> Exact</TextBlock>
                                        </RadioButton>
                                        <DockPanel DockPanel.Dock="Top">
                                            <RadioButton Name="ApproximateMode" GroupName="RenderingMode" DockPanel.Dock="Left" IsChecked="True" Checked="ApproximateMode_Checked">
                                                <TextBlock> Approximate</TextBlock>
                                            </RadioButton>
                                            <TextBlock Margin="30,0,0,0" DockPanel.Dock="Left">Appr. factor = </TextBlock>
                                            <TextBox Text="{Binding Renderer.ApproximationFactor}"></TextBox>
                                        </DockPanel>
                                        <CheckBox Name="OrthographicCheckBox" DockPanel.Dock="Bottom" HorizontalAlignment="Left" Checked="OrthographicCheckBox_Checked" Unchecked="OrthographicCheckBox_Unchecked">
                                            <TextBlock> Enable ortographic view</TextBlock>
                                        </CheckBox>
                                        <CheckBox Name="PointsVisibleCheckBox" Margin="0,1" DockPanel.Dock="Bottom" HorizontalAlignment="Left" IsChecked="True" Checked="PointsVisibleCheckBox_Checked"  Unchecked="PointsVisibleCheckBox_Unchecked">
                                            <TextBlock> Enable points visibility</TextBlock>
                                        </CheckBox>
                                        <CheckBox Name="SymmetryCheckBox" Margin="0,1" DockPanel.Dock="Bottom" HorizontalAlignment="Left" Checked="SymmetryCheckBox_Checked"  Unchecked="SymmetryCheckBox_Unchecked">
                                            <TextBlock> Enable symmetrical editiong for cylinders</TextBlock>
                                        </CheckBox>
                                        <DockPanel Name="FovDock" DockPanel.Dock="Top" Margin="0,8,0,0">
                                            <TextBlock DockPanel.Dock="Left">FOV:</TextBlock>
                                            <TextBlock DockPanel.Dock="Left" Text="{Binding ElementName=FovSlider, Path=Value, StringFormat=N1}" Margin="5,0,0,0"></TextBlock>
                                            <Slider Name="FovSlider" Minimum="60" Maximum="120" Value="{Binding Projection.Fov, Mode=TwoWay}" Width="150"></Slider>
                                        </DockPanel>
                                        <DockPanel Name="EyeDistanceDock" DockPanel.Dock="Top" Visibility="Collapsed" Margin="0,8,0,0">
                                            <TextBlock DockPanel.Dock="Left">Eye distance:</TextBlock>
                                            <TextBlock DockPanel.Dock="Left" Text="{Binding ElementName=EyeDistanceSlider, Path=Value, StringFormat=N1}" Margin="5,0,0,0"></TextBlock>
                                            <Slider Name="EyeDistanceSlider" Minimum="4" Maximum="8" Value="{Binding Projection.D, Mode=TwoWay}" Width="150"></Slider>
                                        </DockPanel>
                                    </DockPanel>
                                </TabItem>
                                <TabItem Header="Copyright" Width="80" Foreground="White">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Surface Editor by Kamil Opalach</TextBlock>
                                </TabItem>
                            </TabControl>
                        </DockPanel>
                    </Grid>
                </Grid>
            </DockPanel>
        </Grid>
        <DockPanel LastChildFill="True" Name="HelpPanel" Background="Black" Opacity="0.9" Visibility="Collapsed" Focusable="True" KeyDown="Window_KeyDown">
            <TextBlock Name="HelpBlock" VerticalAlignment="Center" HorizontalAlignment="Center">
                Key bindings:
                <LineBreak/>
                - F1 - enable/disable help panel
                <LineBreak/>
                - p - create new point
                <LineBreak/>
                - f - enable/disable full screen
                 <LineBreak/>
                - v - toggle visibility of selected model
                <LineBreak/>
                - c - change camera
                <LineBreak/>
                - q,e,a,d,w,s - rotate selected object
                <LineBreak/>
                -u,j,y,h,t,g - move selected object
                <LineBreak/>
                - num: 7,9,4,6,8,2 - move 3D cursor
                <LineBreak/>
                - arrows - move camera
                <LineBreak/>
                - space - catch/drop point nearby
                <LineBreak/>
                - scroll - zoom camera
                <LineBreak/>
                - RMB - move camera
                <LineBreak/>
                - shift+RMB - zoom camera
                <LineBreak/>
                - shift+LMB - zoom 3D cursor
                <LineBreak/>
                - ctrl+RMB click - select point
                <LineBreak/>
                - ctrl+RMB+move - select points in area
                <LineBreak/>
                - ctrl+s - save scene
                 <LineBreak/>
                - tab - select next model on scene
                 <LineBreak/>
                - right shift+tab - select previous model on scene
            </TextBlock>
        </DockPanel>
    </Grid>
</Window>
